import { test, expect } from '@playwright/test';

test.describe('Production Build Simple Tests', () => {
  test('minimal production check', async ({ page }) => {
    console.log('üîß –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ production...');
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
    page.on('console', msg => console.log(`CONSOLE [${msg.type()}]:`, msg.text()));
    page.on('pageerror', err => console.log('PAGE ERROR:', err.message));
    page.on('requestfailed', req => console.log('REQUEST FAILED:', req.url(), req.failure()?.errorText));
    
    try {
      // –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
      const response = await page.goto('http://127.0.0.1:4174/', { 
        waitUntil: 'commit',
        timeout: 8000 
      });
      
      console.log(`üìä Response status: ${response?.status()}`);
      
      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
      await page.waitForTimeout(2000);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
      const title = await page.title();
      console.log(`üìÑ Title: ${title}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML
      const htmlExists = await page.locator('html').count();
      const bodyExists = await page.locator('body').count();  
      const rootExists = await page.locator('#root').count();
      
      console.log(`üìã HTML: ${htmlExists}, Body: ${bodyExists}, Root: ${rootExists}`);
      
      // –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏
      expect(title).toContain('Mantis');
      expect(rootExists).toBe(1);
      
      console.log('‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞');
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
      throw error;
    }
  });
});