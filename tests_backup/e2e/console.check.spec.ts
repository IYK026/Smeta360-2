import { test, expect } from '@playwright/test';

test.describe('Console Error Check', () => {
  test('check for console errors', async ({ page }) => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞...');
    
    // –°–ª—É—à–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∫–æ–Ω—Å–æ–ª–∏
    page.on('console', msg => {
      console.log(`üñ•Ô∏è CONSOLE ${msg.type()}: ${msg.text()}`);
    });
    
    // –°–ª—É—à–∞–µ–º –æ—à–∏–±–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page.on('pageerror', error => {
      console.log(`‚ùå PAGE ERROR: ${error.message}`);
    });
    
    // –°–ª—É—à–∞–µ–º –Ω–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    page.on('requestfailed', request => {
      console.log(`üåê REQUEST FAILED: ${request.url()} - ${request.failure()?.errorText}`);
    });
    
    await page.goto('http://localhost:3000/', { 
      waitUntil: 'commit',
      timeout: 60000 
    });
    
    console.log('üìç –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∂–¥–µ–º –æ—à–∏–±–∫–∏...');
    
    // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –∏ —Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    await page.waitForTimeout(30000);
    
    console.log('‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Å–æ–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω');
  });
});