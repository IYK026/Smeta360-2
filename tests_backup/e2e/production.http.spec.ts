import { test, expect } from '@playwright/test';

test.describe('Production Build HTTP Tests', () => {
  test('production server responds with correct content', async ({ request }) => {
    console.log('üåê HTTP —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production build...');
    
    const startTime = Date.now();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const response = await request.get('http://127.0.0.1:4174/');
    const loadTime = Date.now() - startTime;
    
    console.log(`‚ö° HTTP –æ—Ç–≤–µ—Ç –∑–∞: ${loadTime}ms`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status()}`);
    
    expect(response.ok()).toBeTruthy();
    expect(response.status()).toBe(200);
    
    const body = await response.text();
    console.log(`üìÑ –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${body.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã HTML
    expect(body).toContain('Mantis React Admin Dashboard');
    expect(body).toContain('<!doctype html>');
    expect(body).toContain('<div id="root"></div>');
    expect(body).toContain('type="module"');
    
    console.log('‚úÖ Production build HTTP —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω!');
  });
  
  test('static assets are accessible', async ({ request }) => {
    console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    const htmlResponse = await request.get('http://127.0.0.1:4174/');
    const html = await htmlResponse.text();
    
    // –ò—â–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π JS —Ñ–∞–π–ª
    const jsMatch = html.match(/src="([^"]*\.js)"/);
    if (jsMatch && jsMatch[1]) {
      const jsUrl = jsMatch[1].startsWith('/') ? 
        `http://127.0.0.1:4174${jsMatch[1]}` : 
        `http://127.0.0.1:4174/${jsMatch[1]}`;
      
      console.log(`üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º JS: ${jsUrl}`);
      
      const jsResponse = await request.get(jsUrl);
      console.log(`üìä JS —Å—Ç–∞—Ç—É—Å: ${jsResponse.status()}`);
      expect(jsResponse.ok()).toBeTruthy();
      
      const jsContent = await jsResponse.text();
      console.log(`üìÑ JS —Ä–∞–∑–º–µ—Ä: ${jsContent.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      expect(jsContent.length).toBeGreaterThan(1000); // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º favicon
    const faviconResponse = await request.get('http://127.0.0.1:4174/images/favicon-Bksy1JPm.svg');
    if (faviconResponse.ok()) {
      console.log('‚úÖ Favicon –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      console.log('‚ö†Ô∏è Favicon –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)');
    }
    
    console.log('‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!');
  });
  
  test('API health check works', async ({ request }) => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API health...');
    
    const response = await request.get('http://127.0.0.1:3001/api/health');
    
    console.log(`üìä API —Å—Ç–∞—Ç—É—Å: ${response.status()}`);
    expect(response.ok()).toBeTruthy();
    
    const data = await response.json();
    console.log(`üíì API health: ${JSON.stringify(data)}`);
    
    expect(data.status).toBe('OK');
    expect(data.message).toContain('Backend');
    
    console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  });
});