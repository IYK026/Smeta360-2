import { test, expect } from '@playwright/test';

test.describe('Page Debug Test', () => {
  test('check what page we land on', async ({ page }) => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –º—ã –ø–æ–ø–∞–¥–∞–µ–º...');
    
    await page.goto('http://localhost:3000/', { 
      waitUntil: 'domcontentloaded',
      timeout: 30000 
    });
    
    console.log('üìç –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∂–¥–µ–º React...');
    
    // –ñ–¥–µ–º –∫–æ–≥–¥–∞ React –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–±–æ–ª–µ–µ —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ)
    try {
      await page.waitForSelector('#root > *', { timeout: 30000 });
      console.log('‚öõÔ∏è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    } catch (error) {
      console.log('‚ö†Ô∏è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 30—Å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    await page.waitForTimeout(3000);
    
    // –ü–æ–ª—É—á–∞–µ–º URL
    const currentUrl = page.url();
    console.log(`üåê –¢–µ–∫—É—â–∏–π URL: ${currentUrl}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const title = await page.title();
    console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const emailInput = page.locator('input[type="email"], input[name="email"]');
    const loginButton = page.locator('button', { hasText: /–≤–æ–π—Ç–∏|login/i });
    const dashboardElements = page.locator('[data-testid*="dashboard"], .dashboard, h1, .ant-layout');
    
    const hasEmailInput = await emailInput.count();
    const hasLoginButton = await loginButton.count();
    const hasDashboard = await dashboardElements.count();
    
    console.log(`üìß Email –ø–æ–ª—è –Ω–∞–π–¥–µ–Ω–æ: ${hasEmailInput}`);
    console.log(`üîê –ö–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–æ: ${hasLoginButton}`);
    console.log(`üìä Dashboard —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${hasDashboard}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const bodyHTML = await page.locator('body').innerHTML();
    console.log(`üìù –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:`);
    console.log(`- "–≤—Ö–æ–¥": ${bodyHTML.includes('–≤—Ö–æ–¥') || bodyHTML.includes('–í—Ö–æ–¥')}`);
    console.log(`- "email": ${bodyHTML.includes('email')}`);
    console.log(`- "password": ${bodyHTML.includes('password')}`);
    console.log(`- "dashboard": ${bodyHTML.includes('dashboard')}`);
    
    // –í—ã–≤–µ–¥–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ HTML
    console.log(`\nüìÑ –ù–∞—á–∞–ª–æ HTML:\n${bodyHTML.substring(0, 500)}...`);
    
    expect(currentUrl).toBeTruthy();
  });
});