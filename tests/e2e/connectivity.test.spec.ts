import { test, expect } from '@playwright/test';

test.describe('Basic Connectivity Test', () => {
  test('can connect to localhost:3000', async ({ page }) => {
    console.log('üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å localhost:3000...');
    
    try {
      // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è networkidle
      await page.goto('http://localhost:3000/', { 
        waitUntil: 'commit',
        timeout: 30000 
      });
      
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã div#root –∏–ª–∏ –ª—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç
      const rootElement = page.locator('#root, body, html').first();
      await expect(rootElement).toBeVisible({ timeout: 10000 });
      
      console.log('‚úÖ Root —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const title = await page.title();
      console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${title}`);
      
      expect(title).toBeTruthy();
      console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error.message}`);
      throw error;
    }
  });
});