import { test, expect } from '@playwright/test';

test.describe('Production Build E2E Tests', () => {
  test.beforeEach(async ({ page }) => {
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    page.on('console', msg => console.log('BROWSER:', msg.type(), msg.text()));
    page.on('pageerror', err => console.log('PAGEERROR:', err.message));
    page.on('requestfailed', req => console.log('REQFAILED:', req.url(), req.failure()?.errorText));
    page.on('response', response => {
      if (!response.ok()) {
        console.log('HTTP ERROR:', response.status(), response.url());
      }
    });
  });
  test('production app loads fast and works', async ({ page }) => {
    console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production build...');
    
    const startTime = Date.now();
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ production app (vite preview –Ω–∞ –ø–æ—Ä—Ç—É 4174)
    await page.goto('http://127.0.0.1:4174/', { 
      waitUntil: 'commit',
      timeout: 8000 
    });
    
    const loadTime = Date.now() - startTime;
    console.log(`‚ö° –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ production build: ${loadTime}ms`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å –±—ã—Å—Ç—Ä–æ
    expect(loadTime).toBeLessThan(15000); // –ú–µ–Ω–µ–µ 15 —Å–µ–∫—É–Ω–¥
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const title = await page.title();
    expect(title).toContain('Mantis');
    console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
    
    // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    try {
      await page.waitForSelector('[data-testid="app-root-ready"]', { timeout: 10000 });
      console.log('‚úÖ React app –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω (–ø–æ test-id)');
    } catch {
      console.log('‚ö†Ô∏è Test-id –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã...');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ React app –∫–æ—Ä–µ–Ω—å –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
    const rootElement = await page.locator('#root').count();
    console.log(`üèóÔ∏è Root —ç–ª–µ–º–µ–Ω—Ç: ${rootElement}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const emailInput = await page.locator('input[type="email"]').count();
    const loginButton = await page.locator('button').count();
    const allInputs = await page.locator('input').count();
    const allButtons = await page.locator('button').count();
    
    console.log(`üìß Email –ø–æ–ª—è: ${emailInput}`);
    console.log(`üî≤ Login –∫–Ω–æ–ø–∫–∏: ${loginButton}`);
    console.log(`üìù –í—Å–µ–≥–æ input: ${allInputs}`);
    console.log(`üñ±Ô∏è –í—Å–µ–≥–æ button: ${allButtons}`);
    
    // –ë–æ–ª–µ–µ –≥–∏–±–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Ç—è –±—ã root —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    expect(rootElement + allInputs + allButtons).toBeGreaterThan(0);
    
    console.log('‚úÖ Production build —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  });

  test('login flow works in production', async ({ page }) => {
    console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ production...');
    
    await page.goto('http://127.0.0.1:4174/', { 
      waitUntil: 'commit',
      timeout: 8000 
    });
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    const emailInput = page.locator('input[type="email"]').first();
    const passwordInput = page.locator('input[type="password"]').first();
    const loginButton = page.locator('button[type="submit"]').first();
    
    if (await emailInput.isVisible()) {
      await emailInput.fill('admin@mantis.ru');
      await passwordInput.fill('password123');
      
      console.log('üìù –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
      
      await loginButton.click();
      console.log('üö™ –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ –Ω–∞–∂–∞—Ç–∞');
      
      // –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (—É—Å–ø–µ—Ö –∏–ª–∏ –æ—à–∏–±–∫–∞)
      await page.waitForTimeout(3000);
      
      const currentUrl = page.url();
      console.log(`üåê URL –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞: ${currentUrl}`);
      
      expect(currentUrl).toBeTruthy();
    } else {
      console.log('‚ÑπÔ∏è  –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã');
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω');
  });

  test('navigation elements are present', async ({ page }) => {
    console.log('üß≠ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
    
    await page.goto('http://127.0.0.1:4174/', { 
      waitUntil: 'commit',
      timeout: 8000 
    });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
    await page.waitForTimeout(2000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const navElements = await page.locator('nav, .ant-menu, .sidebar, a[href]').count();
    console.log(`üìã –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${navElements}`);
    
    const interactiveElements = await page.locator('button, input, a').count();
    console.log(`üñ±Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${interactiveElements}`);
    
    expect(interactiveElements).toBeGreaterThan(0);
    console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  });
});