import { test as setup, expect } from '@playwright/test';

const authFile = 'tests/e2e/.auth/admin.json';

setup('authenticate as admin', async ({ page, baseURL }) => {
  console.log('üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è E2E —Ç–µ—Å—Ç–æ–≤...');
  
  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  page.setDefaultTimeout(60000);
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º baseURL –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
  await page.goto(baseURL || 'http://localhost:4174/', { 
    waitUntil: 'networkidle',
    timeout: 60000 
  });
  console.log('üìç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (production build)');
  
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª—é–±–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  try {
    await page.waitForSelector('body', { timeout: 10000 });
    await page.waitForTimeout(3000); // –î–∞–µ–º –≤—Ä–µ–º—è React –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
    console.log('‚öõÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∏—â–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞...');
  } catch (error) {
    console.log('‚ö†Ô∏è Timeout –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
  }
  
  // –ò—â–µ–º –ø–æ–ª—è –¥–ª—è –ª–æ–≥–∏–Ω–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏
  const emailInput = page.locator('input[type="email"]').or(
    page.locator('input[name="email"]')
  ).or(
    page.locator('input[placeholder*="email" i]')
  ).or(
    page.locator('.ant-input').first()
  );
  
  const passwordInput = page.locator('input[type="password"]').or(
    page.locator('input[name="password"]')
  ).or(
    page.locator('.ant-input[type="password"]')
  );
  
  const loginButton = page.locator('button[type="submit"]').or(
    page.locator('button:has-text("–í–æ–π—Ç–∏")')
  ).or(
    page.locator('button:has-text("Login")')
  ).or(
    page.locator('.ant-btn-primary')
  );
  
  // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ —Å —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ä–º –≤—Ö–æ–¥–∞ –±–µ–∑ —Å—Ç—Ä–æ–≥–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
  const hasEmailInput = await emailInput.count();
  const hasPasswordInput = await passwordInput.count();
  
  if (hasEmailInput > 0 && hasPasswordInput > 0) {
    console.log('üìù –ü–æ–ª—è –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞–π–¥–µ–Ω—ã');
  } else {
    console.log('‚ÑπÔ∏è –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
  }
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞ –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
  if (hasEmailInput > 0 && hasPasswordInput > 0) {
    try {
      await emailInput.first().fill('kiy026@yandex.ru');
      await passwordInput.first().fill('Apsni09332');
      console.log('üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã (kiy026@yandex.ru)');
      
      const hasLoginButton = await loginButton.count();
      if (hasLoginButton > 0) {
        await loginButton.first().click();
        console.log('üö™ –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞...');
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º—ã:', String(error));
    }
  } else {
    console.log('‚ÑπÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é - —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –û–∂–∏–¥–∞–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ - –±–æ–ª–µ–µ –≥–∏–±–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ URL –∏–ª–∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞—à–±–æ—Ä–¥–∞
    await Promise.race([
      page.waitForURL(/dashboard|home|main|\/$/),
      page.waitForSelector('.ant-layout, .dashboard, main, [role="main"]', { timeout: 20000 })
    ]);
    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É');
  } catch (error) {
    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—Ö–æ–¥, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
    await page.waitForTimeout(2000); // –î–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  await page.context().storageState({ path: authFile });
  console.log('üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ');
});
