name: Web Performance Budgets
on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  web-performance:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production assets
        run: npm run build:web

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.13.x

      - name: Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: lhci-report/
          retention-days: 7

      - name: Comment PR with Lighthouse results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // –ß–∏—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã Lighthouse
            const reportsDir = 'lhci-report';
            if (fs.existsSync(reportsDir)) {
              const files = fs.readdirSync(reportsDir);
              const jsonReport = files.find(f => f.endsWith('.json'));
              
              if (jsonReport) {
                const reportPath = path.join(reportsDir, jsonReport);
                const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
                
                const scores = report.categories;
                const performance = (scores?.performance?.score * 100) || 0;
                const accessibility = (scores?.accessibility?.score * 100) || 0;
                const bestPractices = (scores?.['best-practices']?.score * 100) || 0;
                const seo = (scores?.seo?.score * 100) || 0;
                
                const comment = `## üîç Lighthouse Performance Report
                
| Category | Score |
|----------|-------|
| Performance | ${performance}% |
| Accessibility | ${accessibility}% |
| Best Practices | ${bestPractices}% |
| SEO | ${seo}% |
                
**Performance Budget:** ${performance >= 80 ? '‚úÖ PASS' : '‚ùå FAIL'}
**Target:** Performance ‚â• 80%
                
[View detailed report in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            }